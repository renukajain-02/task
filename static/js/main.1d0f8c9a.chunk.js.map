{"version":3,"sources":["JS/ShowData.js","JS/SearchData.js","App.js","reportWebVitals.js","index.js"],"names":["ShowData","props","className","selected","id","name","address","useKeyPress","targetKey","useState","keyPressed","setKeyPressed","downHandler","key","upHandler","useEffect","window","addEventListener","removeEventListener","ListItem","item","active","setSelected","setHovered","onClick","onMouseEnter","onMouseLeave","undefined","onKeyPress","pincode","SearchData","downPress","upPress","enterPress","cursor","setCursor","hovered","user","setUser","searchString","setSearchString","length","prevState","items","indexOf","autoFocus","type","onChange","event","searchval","target","value","suggestion","sort","filter","e","toLowerCase","includes","toString","placeholder","map","i","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d0f8c9a.chunk.js","sourcesContent":["const ShowData = (props) => {\r\n    return(\r\n        <>\r\n            <div className=\"container m-5\">\r\n                <h2>Details of Selected User</h2>\r\n                <div className=\"card card-design\">\r\n                    <div className=\"card-body \">\r\n                        <h2 className=\"card-title\">{props.selected.id}</h2>\r\n                        <h3 className=\"card-title\">{props.selected.name}</h3>\r\n                        <p className=\"card-text\">{props.selected.address}</p>\r\n                    </div>\r\n                </div>   \r\n            </div> \r\n        </>\r\n    );\r\n}\r\n\r\nexport default ShowData","import React, { useState, useEffect } from \"react\";\r\nimport items from './Mock_Data.json';\r\nimport ShowData from \"./ShowData\";\r\n\r\n//To Access Arrow Keys(Up, Down) and Enter Key\r\nconst useKeyPress = function(targetKey) {\r\n  const [keyPressed, setKeyPressed] = useState(false);\r\n\r\n  function downHandler({ key }) {\r\n    if (key === targetKey) {\r\n      setKeyPressed(true);\r\n    }\r\n  }\r\n\r\n  const upHandler = ({ key }) => {\r\n    if (key === targetKey) {\r\n      setKeyPressed(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", downHandler);\r\n    window.addEventListener(\"keyup\", upHandler);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", downHandler);\r\n      window.removeEventListener(\"keyup\", upHandler);\r\n    };\r\n  });\r\n\r\n  return keyPressed;\r\n};\r\n\r\n//Display filtered data in suggestion\r\nconst ListItem = ({ item, active, setSelected, setHovered}) => (\r\n  \r\n    <div\r\n        className={`item ${active ? \"active\" : \"\"}`}\r\n        onClick={() => setSelected(item)}\r\n        onMouseEnter={() => setHovered(item)}\r\n        onMouseLeave={() => setHovered(undefined)}\r\n        onKeyPress={() => setSelected(item)}\r\n        >\r\n        <div>\r\n          <h4>{item.id}</h4>\r\n        </div>\r\n        <div>\r\n          <h5>{item.name}</h5>\r\n        </div>\r\n        <div>\r\n            <p>{item.address}, {item.pincode}</p>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst SearchData = () => {\r\n  const [selected, setSelected] = useState(undefined);\r\n  const downPress = useKeyPress(\"ArrowDown\");\r\n  const upPress = useKeyPress(\"ArrowUp\");\r\n  const enterPress = useKeyPress(\"Enter\");\r\n  const [cursor, setCursor] = useState(0);\r\n  const [hovered, setHovered] = useState(undefined);\r\n  const [user,setUser]= useState([]);\r\n  const [searchString,setSearchString] =useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (user.length && downPress) {\r\n      setCursor(prevState =>\r\n        prevState < items.length -1 ? prevState + 1 : prevState\r\n      );\r\n    }\r\n  }, [downPress]);\r\n  useEffect(() => {\r\n    if (user.length && upPress) {\r\n      setCursor(prevState => (prevState > 0 ? prevState - 1 : prevState));\r\n    }\r\n  }, [upPress]);\r\n  useEffect(() => {\r\n    if (user.length && enterPress) {\r\n      setSelected(user[cursor]);\r\n    }\r\n  }, [cursor, enterPress]);\r\n  useEffect(() => {\r\n    if (user.length && hovered) {\r\n      setCursor(user.indexOf(hovered));\r\n    }\r\n  }, [hovered]);\r\n\r\n  //Filter User List on the basis of Search Value\r\n  const handleChange= (event) => {\r\n    let searchval=event.target.value;\r\n    let suggestion=[];\r\n    \r\n    if(searchval.length >0){\r\n      suggestion=items.sort().filter((e) => e.id.toLowerCase().includes(searchval.toLowerCase()) || e.name.toLowerCase().includes(searchval.toLowerCase()) || e.address.toLowerCase().includes(searchval.toLowerCase()) || e.pincode.toLowerCase().includes(searchval.toLowerCase()) || e.items.toString().includes(searchval.toLowerCase()));\r\n    }\r\n    \r\n    setUser(suggestion);\r\n    setSearchString(searchval);\r\n  };\r\n\r\n  const getUsers = () => {\r\n    if (user.length===0 && searchString !== \"\") {\r\n      return <p className=\"m-5\">No User Found</p>;\r\n    }\r\n    return(\r\n      <>\r\n      {user.map((item,i) => {\r\n        return(\r\n            <ListItem\r\n              key={item.id}\r\n              active={i === cursor}\r\n              item={item}\r\n              setSelected={setSelected}\r\n              setHovered={setHovered}\r\n            /> \r\n        );\r\n      })}\r\n      </>\r\n    );\r\n  }\r\n\r\n  //if Data selected then open that data into new page otherwise display \"No User Found\" Message\r\n  if(selected != undefined){  \r\n      return(\r\n          <ShowData selected={selected} />\r\n      )\r\n  }\r\n  else{\r\n    return (\r\n      <div className=\"container m-5\">\r\n        <div className=\"box\">\r\n          <i className=\"fa fa-search m-2\"  />\r\n          <input autoFocus={true} \r\n              className=\"input-search\" \r\n              type=\"search\" \r\n              onChange={handleChange}\r\n              value={searchString}\r\n              placeholder=\"Search Users by ID, Address, Name...\" />\r\n        </div>\r\n        \r\n          {getUsers()}\r\n        \r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SearchData\r\n","import './App.css';\nimport SearchData from './JS/SearchData';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SearchData />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}